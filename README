rubinius_macros is a set of macros for Rubinius that operate on the AST and modify it.

The idea occured to me after playing with Rubinius bytecode compiler in an irb session: https://gist.github.com/1021515

Then thinking about the possibility of macros in Ruby I found Raganwald's Rewrite Rails https://github.com/raganwald/rewrite_rails and thus this project emerged.

The main difference between Rewrite Rails and rubinius_macros is rubinius_macros runs on Rubinius and Rubinius has got a very flexible compiler infrastructure. It is quite easy to replace parts of it (or subclass the Melbourne parser/processor as is the case in this project) without having to use an external parser to create sexp/AST (as was the case with Rewrite Rails which needed to parse .rr files)

Goals:

Provide a set of macros to use with Ruby (eg. SymbolToProc, Andand and many more)

How to use ?

rbx -rlib/rubinius_macros your_script.rb

How to run specs ?

rbx gem install rspec

rbx -rlib/rubinius_macros -S rspec spec